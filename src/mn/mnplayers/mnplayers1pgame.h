#ifndef _MNPLAYERS1PGAME_H_
#define _MNPLAYERS1PGAME_H_

#include <ssb_types.h>
#include <sys/objdef.h>
#include <PR/gbi.h>
#include <mn/mndef.h>

extern void mnPlayers1PGameFuncLights(Gfx **dls);
extern s32 mnPlayers1PGameGetPowerOf(s32 base, s32 exp);
extern void mnPlayers1PGameSetDigitColors(SObj *sobj, u32 *colors);
extern s32 mnPlayers1PGameGetNumberDigitCount(s32 number, s32 digit_count_max);
extern void mnPlayers1PGameMakeNumber(GObj *gobj, s32 number, f32 x, f32 y, u32 *colors, s32 digit_count_max, sb32 is_fixed_digit_count);
extern s32 mnPlayers1PGameGetCharacterID(const char c);
extern f32 mnPlayers1PGameGetCharacterSpacing(const char *str, s32 c);
extern void mnPlayers1PGameMakeString(GObj *gobj, const char *str, f32 x, f32 y, u32 *colors);
extern void mnPlayers1PGameSelectFighterPuck(s32 player, s32 select_button);
extern f32 mnPlayers1PGameGetNextPortraitX(s32 portrait, f32 current_pos_x);
extern sb32 mnPlayers1PGameCheckFighterCrossed(s32 fkind);
extern void mnPlayers1PGamePortraitProcUpdate(GObj *gobj);
extern void mnPlayers1PGameSetPortraitWallpaperPosition(SObj *sobj, s32 portrait);
extern void mnPlayers1PGamePortraitAddCross(GObj *gobj, s32 portrait);
extern sb32 mnPlayers1PGameCheckFighterLocked(s32 fkind);
extern s32 mnPlayers1PGameGetFighterKind(s32 portrait);
extern s32 mnPlayers1PGameGetPortrait(s32 fkind);
extern void mnPlayers1PGamePortraitProcDisplay(GObj *gobj);
extern void mnPlayers1PGameMakePortraitShadow(s32 portrait);
extern void mnPlayers1PGameMakePortrait(s32 portrait);
extern void mnPlayers1PGameMakePortraitAll(void);
extern void mnPlayers1PGameMakeNameAndEmblem(GObj *gobj, s32 player, s32 fkind);
extern void mnPlayers1PGameMakePortraitCamera(void);
extern void mnPlayers1PGameMakePortraitWallpaperCamera(void);
extern void mnPlayers1PGameMakePortraitFlashCamera(void);
extern void mnPlayers1PGameMakePlayerKindCamera(void);
extern void mnPlayers1PGameSetGateLUT(GObj *gobj, s32 player);
extern void mnPlayers1PGameMakeGate(s32 player);
extern void mnPlayers1PGameMakeTimeNumber(GObj *gobj, s32 number, f32 x, f32 y, u32 *colors, s32 digit_count_max, sb32 is_fixed_digit_count);
extern void mnPlayers1PGameMakeTimeSetting(s32 number);
extern void mnPlayers1PGameMakeTimeSelect(s32 number);
extern void mnPlayers1PGameMakeWallpaper(void);
extern void mnPlayers1PGameMakeWallpaperCamera(void);
extern void mnPlayers1PGameLabelsProcDisplay(GObj *gobj);
extern SObj* mnPlayers1PGameGetArrowSObj(GObj *gobj, s32 direction);
extern void mnPlayers1PGameLevelThreadUpdate(GObj *gobj);
extern void mnPlayers1PGameMakeLevel(s32 level);
extern void mnPlayers1PGameMakeLevelOption(void);
extern void mnPlayers1PGameStockThreadUpdate(GObj *gobj);
extern void mnPlayers1PGameMakeStock(s32 stock, s32 fkind);
extern void mnPlayers1PGameMakeStockOption(void);
extern void mnPlayers1PGameMakeLabels(void);
extern void mnPlayers1PGameMakeLabelsCamera(void);
extern u32 mnPlayers1PGameGetHiScore(s32 fkind);
extern void mnPlayers1PGameMakeHiScore(void);
extern u32 mnPlayers1PGameGetBonusCount(s32 fkind);
extern void mnPlayers1PGameMakeBonusCount(void);
extern void mnPlayers1PGameMakeFighterRecord(void);
extern u32 mnPlayers1PGameGetTotalHiScore(void);
extern void mnPlayers1PGameMakeTotalHiScore(void);
extern u32 mnPlayers1PGameGetTotalBonusCount(void);
extern void mnPlayers1PGameMakeTotalBonusCount(void);
extern void mnPlayers1PGameMakeTotalRecord(void);
extern s32 mnPlayers1PGameGetFreeCostume(s32 fkind, s32 select_button);
extern s32 mnPlayers1PGameGetStatusSelected(s32 fkind);
extern void mnPlayers1PGameFighterProcUpdate(GObj *fighter_gobj);
extern void mnPlayers1PGameMakeFighter(GObj *fighter_gobj, s32 player, s32 fkind, s32 costume);
extern void mnPlayers1PGameMakeFighterCamera(void);
extern void mnPlayers1PGameUpdateCursor(GObj *gobj, s32 player, s32 cursor_status);
extern sb32 mnPlayers1PGameCheckTimeArrowRInRange(GObj *gobj);
extern sb32 mnPlayers1PGameCheckTimeArrowLInRange(GObj *gobj);
extern sb32 mnPlayers1PGameCheckBackInRange(GObj *gobj);
extern sb32 mnPlayers1PGameCheckPuckInRange(GObj *gobj, s32 cursor_player, s32 player);
extern void mnPlayers1PGameUpdateFighter(s32 player);
extern void mnPlayers1PGameUpdateNameAndEmblem(s32 player);
extern void mnPlayers1PGameDestroyPortraitFlash(s32 player);
extern void mnPlayers1PGamePortraitFlashThreadUpdate(GObj *gobj);
extern void mnPlayers1PGameMakePortraitFlash(s32 player);
extern void mnPlayers1PGameAnnounceFighter(s32 player, s32 slot);
extern sb32 mnPlayers1PGameCheckSelectFighter(GObj *gobj, s32 player, s32 unused, s32 select_button);
extern void mnPlayers1PGameUpdateCursorGrabPriorities(s32 player, s32 puck);
extern void mnPlayers1PGameUpdateCursorPlacementPriorities(s32 player);
extern void mnPlayers1PGameSetCursorPuckOffset(s32 player);
extern void mnPlayers1PGameSetCursorGrab(s32 player);
extern sb32 mnPlayers1PGameCheckCursorPuckGrab(GObj *gobj, s32 player);
extern s32 mnPlayers1PGameGetForcePuckFighterKind(void);
extern s32 mnPlayers1PGameGetPuckFighterKind(s32 player);
extern void mnPlayers1PGameAdjustCursor(GObj *gobj, s32 player);
extern void mnPlayers1PGameUpdateCursorNoRecall(GObj *gobj, s32 player);
extern sb32 mnPlayers1PGameCheckLevelArrowRInRange(GObj *gobj);
extern sb32 mnPlayers1PGameCheckLevelArrowLInRange(GObj *gobj);
extern sb32 mnPlayers1PGameCheckLevelArrowPress(GObj *gobj);
extern sb32 mnPlayers1PGameCheckStockArrowRInRange(GObj *gobj);
extern sb32 mnPlayers1PGameCheckStockArrowLInRange(GObj *gobj);
extern sb32 mnPlayers1PGameCheckStockArrowPress(GObj *gobj);
extern void mnPlayers1PGameUpdateCostume(s32 player, s32 select_button);
extern sb32 mnPlayers1PGameCheckManFighterSelected(s32 player);
extern void mnPlayers1PGameRecallPuck(s32 player);
extern void mnPlayers1PGameBackTo1PMode(void);
extern void mnPlayers1PGameDetectBack(s32 player);
extern void mnPlayers1PGameCursorProcUpdate(GObj *gobj);
extern void mnPlayers1PGameCenterPuckInPortrait(GObj *gobj, s32 fkind);
extern void mnPlayers1PGameMovePuck(s32 player);
extern void mnPlayers1PGamePuckProcUpdate(GObj *gobj);
extern void mnPlayers1PGameMakeCursorCamera(void);
extern void mnPlayers1PGameMakePuckCamera(void);
extern void mnPlayers1PGameMakeReadyCamera(void);
extern void mnPlayers1PGameMakeCursor(s32 player);
extern void mnPlayers1PGameMakePuck(s32 player);
extern void mnPlayers1PGamePuckAdjustPortraitEdge(s32 player);
extern void mnPlayers1PGamePuckAdjustPlaced(s32 player);
extern void mnPlayers1PGamePuckAdjustRecall(s32 player);
extern void mnPlayers1PGamePuckAdjustProcUpdate(GObj *gobj);
extern void mnPlayers1PGameMakePuckAdjust(void);
extern void mnPlayers1PGameSpotlightProcUpdate(GObj *gobj);
extern void mnPlayers1PGameMakeSpotlight(void);
extern void mnPlayers1PGameReadyProcUpdate(GObj *gobj);
extern void mnPlayers1PGameMakeReady(void);
extern sb32 mnPlayers1PGameCheckReady(void);
extern void mnPlayers1PGameSetSceneData(void);
extern void mnPlayers1PGamePauseSlotProcesses(void);
extern void mnPlayers1PGameFuncRun(GObj *gobj);
extern s32 mnPlayers1PGameGetNextTimeValue(s32 value);
extern s32 mnPlayers1PGameGetPrevTimeValue(s32 value);
extern void mnPlayers1PGameInitPlayer(s32 player);
extern void mnPlayers1PGameInitVars(void);
extern void mnPlayers1PGameInitSlot(s32 player);
extern void mnPlayers1PGameFuncStart(void);
extern void mnPlayers1PGameStartScene(void);

#endif
