#ifndef _MNPLAYERSVS_H_
#define _MNPLAYERSVS_H_

#include <ssb_types.h>
#include <sys/objdef.h>
#include <PR/gbi.h>
#include <mn/mndef.h>

extern void mnPlayersVSFuncLights(Gfx **dls);
extern s32 mnPlayersVSGetShade(s32 player);
extern void mnPlayersVSSelectFighterPuck(s32 player, s32 select_button);
extern f32 mnPlayersVSGetNextPortraitX(s32 portrait, f32 current_pos_x);
extern sb32 mnPlayersVSCheckFighterCrossed(s32 fkind);
extern void mnPlayersVSPortraitProcUpdate(GObj *gobj);
extern void mnPlayersVSSetPortraitWallpaperPosition(SObj *sobj, s32 portrait);
extern void mnPlayersVSPortraitAddCross(GObj *gobj, s32 portrait);
extern sb32 mnPlayersVSCheckFighterLocked(s32 fkind);
extern s32 mnPlayersVSGetFighterKind(s32 portrait);
extern s32 mnPlayersVSGetPortrait(s32 fkind);
extern void mnPlayersVSPortraitProcDisplay(GObj *gobj);
extern void mnPlayersVSMakePortraitShadow(s32 portrait);
extern void mnPlayersVSMakePortrait(s32 portrait);
extern void mnPlayersVSMakePortraitAll(void);
extern void mnPlayersVSMakeTeamSelect(s32 team, s32 player);
extern void mnPlayersVSDestroyTeamSelect(s32 player);
extern void mnPlayersVSUpdateTeamSelect(s32 team, s32 player);
extern void mnPlayersVSDestroyTeamSelectAll(void);
extern void mnPlayersVSMakeTeamSelectAll(void);
extern void mnPlayersVSUpdatePlayerKindSelect(GObj *gobj, s32 player, s32 pkind);
extern void mnPlayersVSMakeNameAndEmblem(GObj *gobj, s32 player, s32 fkind);
extern void mnPlayersVSUpdateShutter(s32 player);
extern void mnPlayersVSShutterProcUpdate(GObj *gobj);
extern void mnPlayersVSMakePortraitCamera(void);
extern void mnPlayersVSMakePortraitWallpaperCamera(void);
extern void mnPlayersVSMakePortraitFlashCamera(void);
extern void mnPlayersVSMakeGateCamera(void);
extern void mnPlayersVSMakePlayerKindSelectCamera(void);
extern void mnPlayersVSMakePlayerKindCamera(void);
extern void mnPlayersVSMakeTeamSelectCamera(void);
extern void mnPlayersVSShutter1PProcDisplay(GObj *gobj);
extern void mnPlayersVSShutter2PProcDisplay(GObj *gobj);
extern void mnPlayersVSShutter3PProcDisplay(GObj *gobj);
extern void mnPlayersVSShutter4PProcDisplay(GObj *gobj);
extern void mnPlayersVSSetGateLUT(GObj *gobj, s32 player, s32 pkind);
extern void mnPlayersVSMakePlayerKindSelect(s32 player);
extern void mnPlayersVSMakePlayerKind(s32 player);
extern void mnPlayersVSMakeGate(s32 player);
extern s32 mnPlayersVSGetPowerOf(s32 base, s32 exp);
extern void mnPlayersVSSetDigitColors(SObj *sobj, u32 *colors);
extern s32 mnPlayersVSGetNumberDigitCount(s32 number, s32 digit_count_max);
extern void mnPlayersVSMakeGameRuleNumber(GObj *gobj, s32 number, f32 x, f32 y, u32 *colors, s32 digit_count_max, sb32 is_fixed_digit_count);
extern void mnPlayersVSMakeTimeSetting(s32 number);
extern void mnPlayersVSMakeTimeSelect(s32 number);
extern void mnPlayersVSMakeStockSetting(s32 number);
extern void mnPlayersVSMakeStockSelect(s32 number);
extern void mnPlayersVSMakeWallpaper(void);
extern void mnPlayersVSMakeLabels(void);
extern s32 mnPlayersVSGetFighterKindCount(s32 fkind);
extern sb32 mnPlayersVSCheckCostumeUsed(s32 fkind, s32 player, s32 costume);
extern s32 mnPlayersVSGetFreeCostumeRoyal(s32 fkind, s32 player);
extern s32 mnPlayersVSGetFreeCostume(s32 fkind, s32 player);
extern s32 mnPlayersVSGetStatusSelected(s32 fkind);
extern void mnPlayersVSFighterProcUpdate(GObj *fighter_gobj);
extern void mnPlayersVSMakeFighter(GObj *fighter_gobj, s32 player, s32 fkind, s32 costume);
extern void mnPlayersVSMakeFighterCamera(void);
extern void mnPlayersVSUpdateCursor(GObj *gobj, s32 player, s32 cursor_status);
extern sb32 mnPlayersVSCheckTimeArrowRInRange(GObj *gobj);
extern s32 mnPlayersVSCheckTimeArrowLInRange(GObj *gobj);
extern void mnPlayersVSUpdateGateAll(void);
extern sb32 mnPlayersVSCheckGameModeInRange(GObj *gobj);
extern void mnPlayersVSUpdateGameMode(void);
extern s32 mnPlayersVSCheckTeamSelectInRange(GObj *gobj, s32 player);
extern sb32 mnPlayersVSCheckTeamSelectInRangeAll(GObj *gobj, s32 cursor_player);
extern sb32 mnPlayersVSCheckHandicapArrowInRangeAll(GObj *gobj, s32 cursor_player);
extern sb32 mnPlayersVSCheckHandicapArrowRInRange(GObj *gobj, s32 player);
extern sb32 mnPlayersVSCheckHandicapArrowLInRange(GObj *gobj, s32 player);
extern s32 mnPlayersVSCheckPlayerKindSelectInRange(GObj *gobj, s32 player);
extern sb32 mnPlayersVSCheckPuckInRange(GObj *gobj, s32 cursor_player, s32 player);
extern void mnPlayersVSUpdatePlayerKind(s32 player);
extern void mnPlayersVSUpdatePuckDisplay(GObj *gobj, s32 player);
extern void mnPlayersVSUpdateFighter(s32 player);
extern void mnPlayersVSUpdateCursorDisplay(GObj *gobj, s32 player);
extern void mnPlayersVSUpdateNameAndEmblem(s32 player);
extern void mnPlayersVSDestroyPortraitFlash(s32 player);
extern void mnPlayersVSPortraitFlashThreadUpdate(GObj *gobj);
extern void mnPlayersVSMakePortraitFlash(s32 player);
extern sb32 mnPlayersVSCheckPlayerKindSelect(GObj *gobj, s32 player, s32 select_player);
extern sb32 mnPlayersVSCheckPlayerKindSelectAllPlayer(GObj *gobj, s32 player);
extern void mnPlayersVSAnnounceFighter(s32 player, s32 slot);
extern void mnPlayersVSHideFighterName(s32 player);
extern void mnPlayersVSDestroyHandicapLevel(s32 player);
extern SObj* mnPlayersVSGetArrowSObj(GObj *gobj, sb32 left_or_right);
extern void mnPlayersVSArrowThreadUpdate(GObj *gobj);
extern void mnPlayersVSHandicapLevelProcUpdate(GObj *gobj);
extern void mnPlayersVSMakeHandicapLevel(s32 player);
extern void mnPlayersVSMakeHandicapLevelValue(s32 player);
extern void mnPlayersVSUpdateHandicapLevel(s32 player);
extern sb32 mnPlayersVSCheckHandicapOn(void);
extern sb32 mnPlayersVSCheckHandicapAuto(void);
extern sb32 mnPlayersVSCheckHandicap(void);
extern sb32 mnPlayersVSSelectFighter(GObj *gobj, s32 player, s32 unused, s32 select_button);
extern void mnPlayersVSUpdateCursorGrabPriorities(s32 player, s32 puck);
extern s32 mnPlayersVSUpdateCursorPlacementPriorities(s32 player, s32 puck);
extern void mnPlayersVSSetCursorPuckOffset(s32 player);
extern void mnPlayersVSSetCursorGrab(s32 player, s32 held_player);
extern sb32 mnPlayersVSCheckCursorPuckGrab(GObj *gobj, s32 player);
extern s32 mnPlayersVSGetPuckFighterKind(s32 player);
extern void mnPlayersVSAdjustCursor(GObj *gobj, s32 player);
extern void mnPlayersVSUpdateCursorNoRecall(GObj *gobj, s32 player);
extern void mnPlayersVSUpdateCostume(s32 player, s32 select_button);
extern sb32 mnPlayersVSCheckManFighterSelected(s32 player);
extern void mnPlayersVSRecallPuck(s32 player);
extern void mnPlayersVSBackToVSMode(void);
extern void mnPlayersVSDetectBack(s32 player);
extern s32 mnPlayersVSCheckBackInRange(GObj *gobj);
extern void mnPlayersVSCursorProcUpdate(GObj *gobj);
extern void mnPlayersVSUpdatePuck(GObj *gobj, s32 puck);
extern void mnPlayersVSCenterPuckInPortrait(GObj *gobj, s32 fkind);
extern s32 mnPlayersVSRandFighterKind(GObj *gobj);
extern void mnPlayersVSMovePuck(s32 player);
extern void mnPlayersVSPuckProcUpdate(GObj *gobj);
extern void mnPlayersVSMakeCursorCamera(void);
extern void mnPlayersVSMakePuckCamera(void);
extern void mnPlayersVSMakeHandicapLevelCamera(void);
extern void mnPlayersVSMakeReadyCamera(void);
extern void mnPlayersVSMakeCursor(s32 player);
extern void mnPlayersVSPuckProcDisplay(GObj *gobj);
extern void mnPlayersVSMakePuck(s32 player);
extern f32 mnPlayersVSGetPuckDistance(s32 this_player, s32 other_player);
extern void mnPlayersVSPuckAdjustOverlap(s32 this_player, s32 other_player, f32 unused);
extern void mnPlayersVSPuckAdjustPortraitEdge(s32 player);
extern void mnPlayersVSPuckAdjustPlaced(s32 player);
extern void mnPlayersVSPuckAdjustRecall(s32 player);
extern void mnPlayersVSPuckAdjustProcUpdate(GObj *gobj);
extern void mnPlayersVSMakePuckAdjust(void);
extern void mnPlayersVSUpdatePuckGlowColor(GObj *gobj);
extern void mnPlayersVSMakePuckGlow(void);
extern void mnPlayersVSCostumeSyncProcUpdate(GObj *gobj);
extern void mnPlayersVSMakeCostumeSync(void);
extern void mnPlayersVSSpotlightProcUpdate(GObj *gobj);
extern void mnPlayersVSMakeSpotlight(void);
extern void mnPlayersVSReadyProcUpdate(GObj *gobj);
extern void mnPlayersVSMakeReady(void);
extern void mnPlayersVSUpdateGate(s32 player);
extern void mnPlayersVSUpdateControllerOrders(void);
extern s32 mnPlayersVSGetReadyPlayerCount(void);
extern void mnPlayersVSSetPlayerNot(s32 player);
extern void mnPlayersVSSetIdlePlayerNotAll(void);
extern sb32 mnPlayersVSCheckSingleTeam(void);
extern sb32 mnPlayersVSCheckNoPuckOnPortraitAll(void);
extern sb32 mnPlayersVSCheckReady(void);
extern void mnPlayersVSSetSceneData(void);
extern void mnPlayersVSPauseSlotProcesses(void);
extern void mnPlayersVSFuncRun(GObj *gobj);
extern s32 mnPlayersVSGetNextTimeValue(s32 current_value);
extern s32 mnPlayersVSGetPrevTimeValue(s32 current_value);
extern void mnPlayersVSInitPlayer(s32 player);
extern void mnPlayersVSResetPlayer(s32 player);
extern void mnPlayersVSInitVars(void);
extern void mnPlayersVSInitSlot(s32 player);
extern void mnPlayersVSInitSlotAll(void);
extern void mnPlayersVSFuncStart(void);
extern void mnPlayersVSStartScene(void);

#endif
